databaseChangeLog:
  - changeSet:
      id: 001-create-update-timestamp-function
      author: Avazbek
      changes:
        - sql:
            comment: "Создание триггерной функции для автоматического обновления поля updated_at"
            sql: |
              CREATE OR REPLACE FUNCTION update_timestamp()
              RETURNS TRIGGER AS $$
              BEGIN
                  NEW.updated_at = NOW();
                  RETURN NEW;
              END;
              $$ LANGUAGE plpgsql;

  # --- ТАБЛИЦЫ-СПРАВОЧНИКИ (не зависят от других) ---
  - changeSet:
      id: 001-create-roles
      author: Avazbek
      changes:
        - createTable:
            tableName: roles
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true } }
              - column: { name: name, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql: { sql: "CREATE TRIGGER set_timestamp BEFORE UPDATE ON roles FOR EACH ROW EXECUTE PROCEDURE update_timestamp();" }

  - changeSet:
      id: 001-create-course
      author: Avazbek
      changes:
        - createTable:
            tableName: course
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true } }
              - column: { name: name, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: price, type: bigint, constraints: { nullable: false, defaultValueNumeric: 0 } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql: { sql: "CREATE TRIGGER set_timestamp BEFORE UPDATE ON course FOR EACH ROW EXECUTE PROCEDURE update_timestamp();" }

  - changeSet:
      id: 001-create-room
      author: Avazbek
      changes:
        - createTable:
            tableName: room
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true } }
              - column: { name: name, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: room_number, type: smallint, constraints: { unique: true, nullable: false } }
              - column: { name: capacity, type: int, constraints: { nullable: false } }
              - column: { name: desks, type: int, constraints: { nullable: false } }
              - column: { name: chairs, type: int, constraints: { nullable: false } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql: { sql: "CREATE TRIGGER set_timestamp BEFORE UPDATE ON room FOR EACH ROW EXECUTE PROCEDURE update_timestamp();" }

  # --- ОСНОВНЫЕ ТАБЛИЦЫ, ЗАВИСЯЩИЕ ОТ СПРАВОЧНИКОВ ---
  - changeSet:
      id: 001-create-users
      author: Avazbek
      changes:
        - createTable:
            tableName: users
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true } }
              - column: { name: name, type: varchar(255), constraints: { nullable: false } }
              - column: { name: surname, type: varchar(255), constraints: { nullable: false } }
              - column: { name: phone_number, type: varchar(50), constraints: { nullable: false } }
              - column: { name: username, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: password, type: text, constraints: { nullable: false } }
              - column: { name: refresh_token, type: varchar(1024) }
              - column: { name: role_id, type: bigint, constraints: { foreignKeyName: fk_users_role, references: roles(id) } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql: { sql: "CREATE TRIGGER set_timestamp BEFORE UPDATE ON users FOR EACH ROW EXECUTE PROCEDURE update_timestamp();" }

  - changeSet:
      id: 001-create-groups
      author: Avazbek
      changes:
        - createTable:
            tableName: groups
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true } }
              - column: { name: name, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: start_date, type: date }
              - column: { name: end_date, type: date }
              - column: { name: status, type: varchar(50) }
              - column: { name: course_id, type: bigint, constraints: { nullable: false, foreignKeyName: fk_groups_course, references: course(id) } }
              - column: { name: teacher_id, type: bigint, constraints: { nullable: false, foreignKeyName: fk_groups_teacher, references: users(id) } }
              - column: { name: room_id, type: bigint, constraints: { foreignKeyName: fk_groups_room, references: room(id) } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql: { sql: "CREATE TRIGGER set_timestamp BEFORE UPDATE ON groups FOR EACH ROW EXECUTE PROCEDURE update_timestamp();" }

  - changeSet:
      id: 001-create-student
      author: Avazbek
      changes:
        - createTable:
            tableName: student
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true } }
              - column: { name: name, type: varchar(255), constraints: { nullable: false } }
              - column: { name: surname, type: varchar(255), constraints: { nullable: false } }
              - column: { name: phone_number, type: varchar(50), constraints: { nullable: false } }
              - column: { name: balance, type: bigint, defaultValueNumeric: 0, constraints: { nullable: false } }
              - column: { name: group_id, type: bigint, constraints: { foreignKeyName: fk_student_group, references: groups(id) } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql: { sql: "CREATE TRIGGER set_timestamp BEFORE UPDATE ON student FOR EACH ROW EXECUTE PROCEDURE update_timestamp();" }

  - changeSet:
      id: 001-create-lesson
      author: Avazbek
      changes:
        - createTable:
            tableName: lesson
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true } }
              - column: { name: theme, type: varchar(255) }
              - column: { name: date, type: date, constraints: { nullable: false } }
              - column: { name: start_time, type: time, constraints: { nullable: false } }
              - column: { name: end_time, type: time, constraints: { nullable: false } }
              - column: { name: group_id, type: bigint, constraints: { nullable: false, foreignKeyName: fk_lesson_group, references: groups(id), onDelete: "CASCADE" } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql: { sql: "CREATE TRIGGER set_timestamp BEFORE UPDATE ON lesson FOR EACH ROW EXECUTE PROCEDURE update_timestamp();" }

  - changeSet:
      id: 001-create-attendance
      author: Avazbek
      changes:
        - createTable:
            tableName: attendance
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true } }
              - column: { name: status, type: varchar(50) }
              - column: { name: student_id, type: bigint, constraints: { nullable: false, foreignKeyName: fk_attendance_student, references: student(id) } }
              - column: { name: lesson_id, type: bigint, constraints: { nullable: false, foreignKeyName: fk_attendance_lesson, references: lesson(id) } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - addUniqueConstraint:
            tableName: attendance
            columnNames: student_id, lesson_id
            constraintName: uq_student_lesson_attendance
        - sql: { sql: "CREATE TRIGGER set_timestamp BEFORE UPDATE ON attendance FOR EACH ROW EXECUTE PROCEDURE update_timestamp();" }

  - changeSet:
      id: 001-create-role-permissions
      author: Avazbek
      changes:
        - createTable:
            tableName: role_permissions
            columns:
              - column: { name: role_id, type: bigint, constraints: { primaryKey: true, nullable: false, foreignKeyName: fk_role_permissions_role, references: roles(id) } }
              - column: { name: permission, type: varchar(255), constraints: { primaryKey: true, nullable: false } }