databaseChangeLog:
  - changeSet:
      id: 2-create-roles-table
      author: Avazbek
      changes:
        - createTable:
            tableName: roles
            remarks: "Таблица ролей пользователей (SUPER_ADMIN, TEACHER и т.д.)"
            columns:
              - column: { name: id, type: BIGSERIAL, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: name, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql:
            sql: CREATE TRIGGER set_timestamp BEFORE UPDATE ON roles FOR EACH ROW EXECUTE PROCEDURE update_timestamp();

  - changeSet:
      id: 3-create-users-table
      author: db_architect
      changes:
        - createTable:
            tableName: users
            remarks: "Таблица пользователей системы"
            columns:
              - column: { name: id, type: BIGSERIAL, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: name, type: varchar(255), constraints: { nullable: false } }
              - column: { name: surname, type: varchar(255), constraints: { nullable: false } }
              - column: { name: phone_number, type: varchar(255), constraints: { nullable: false } }
              - column: { name: username, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: password, type: text, constraints: { nullable: false } } # TEXT для хэша любой длины
              - column: { name: refresh_token, type: varchar(1024) }
              - column:
                  name: role_id
                  type: bigint
                  constraints:
                    foreignKeyName: fk_users_role
                    references: roles(id)
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql:
            sql: CREATE TRIGGER set_timestamp BEFORE UPDATE ON users FOR EACH ROW EXECUTE PROCEDURE update_timestamp();

  - changeSet:
      id: 4-create-courses-table
      author: db_architect
      changes:
        - createTable:
            tableName: course
            remarks: "Таблица учебных курсов"
            columns:
              - column: { name: id, type: BIGSERIAL, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: name, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: price, type: bigint, constraints: { nullable: false } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql:
            sql: CREATE TRIGGER set_timestamp BEFORE UPDATE ON course FOR EACH ROW EXECUTE PROCEDURE update_timestamp();

  - changeSet:
      id: 5-create-rooms-table
      author: db_architect
      changes:
        - createTable:
            tableName: room
            remarks: "Таблица аудиторий"
            columns:
              - column: { name: id, type: BIGSERIAL, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: name, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: room_number, type: smallint, constraints: { unique: true, nullable: false } }
              - column: { name: capacity, type: int, constraints: { nullable: false } }
              - column: { name: desks, type: int, constraints: { nullable: false } }
              - column: { name: chairs, type: int, constraints: { nullable: false } }
              - column: { name: created_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: updated_at, type: timestamptz, defaultValueComputed: "now()", constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
        - sql:
            sql: CREATE TRIGGER set_timestamp BEFORE UPDATE ON room FOR EACH ROW EXECUTE PROCEDURE update_timestamp();